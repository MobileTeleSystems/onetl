name: Tests for WebDAV
on:
  workflow_call:
    inputs:
      webdav-version:
        required: true
        type: string
      pydantic-version:
        required: true
        type: string
      python-version:
        required: true
        type: string
      os:
        required: true
        type: string
      with-cache:
        required: false
        type: boolean
        default: true

jobs:
  test-webdav:
    name: Run WebDAV tests (server=${{ inputs.webdav-version }}, pydantic=${{ inputs.pydantic-version }}, python=${{ inputs.python-version }}, os=${{ inputs.os }})
    runs-on: ${{ inputs.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        if: inputs.with-cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ inputs.python-version }}-pydantic-${{ inputs.pydantic-version }}-tests-webdav-${{ hashFiles('requirements/core.txt', 'requirements/webdav.txt', 'requirements/tests/base.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ inputs.python-version }}-pydantic-${{ inputs.pydantic-version }}-tests-webdav-${{ hashFiles('requirements/core.txt', 'requirements/webdav.txt', 'requirements/tests/base.txt') }}
            ${{ runner.os }}-python-${{ inputs.python-version }}-pydantic-${{ inputs.pydantic-version }}-tests-webdav-

      - name: Upgrade pip
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Install dependencies
        run: |
          pip install -I -r requirements/core.txt -r requirements/webdav.txt -r requirements/tests/base.txt -r requirements/tests/pydantic-${{ inputs.pydantic-version }}.txt

    # Replace with Github Actions' services after https://github.com/chonjay21/docker-webdav/pull/3
    # Cannot use services because we need to mount config file from the repo, but services start before checkout.
    # See https://github.com/orgs/community/discussions/25792
      - name: Start WebDAV
        run: |
          docker compose down -v --remove-orphans
          docker compose up -d webdav
        env:
          WEBDAV_IMAGE: chonjay21/webdav:${{ inputs.webdav-version }}

      - name: Run tests
        run: |
          mkdir reports/ || echo "Directory exists"
          sed '/^$/d' ./.env.local | sed '/^#/d' | sed 's/^/export /' > ./env
          source ./env
          ./pytest_runner.sh -m webdav

      - name: Dump WebDAV logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          images: chonjay21/webdav
          dest: ./logs

      - name: Upload WebDAV logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: container-logs-webdav-${{ inputs.webdav-version }}-python-${{ inputs.python-version }}-os-${{ inputs.os }}
          path: logs/*

      - name: Shutdown WebDAV
        if: always()
        run: |
          docker compose down -v --remove-orphans

      - name: Upload coverage results
        uses: actions/upload-artifact@v4
        with:
          name: coverage-webdav-${{ inputs.webdav-version }}-python-${{ inputs.python-version }}-os-${{ inputs.os }}
          path: reports/*
          # https://github.com/actions/upload-artifact/issues/602
          include-hidden-files: true
